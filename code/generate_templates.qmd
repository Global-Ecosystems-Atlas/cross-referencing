---
title: "Generate membership matrix templates"
author: "Ben Cresswell"
date: "`r format(Sys.time(), '%d %B, %Y')`"
output: 
 html_document:
    code_folding: show
    collapse: no
    df_print: paged
    fig_caption: yes
    fig_height: 6
    fig_width: 10
    highlight: textmate
    theme: spacelab
    toc: yes
    toc_float: yes
editor_options: 
  chunk_output_type: inline
---


```{r setup, include=FALSE}
# Set options, housekeeping
knitr::opts_chunk$set(
	echo = FALSE,
	include = TRUE,
	message = FALSE,
	warning = FALSE)
```


# Introduction
This file takes information from the main database and generates templates for the IUCN crosswalk tables. It uses the `data_review` sheet from the GEA Google Sheet, which contains metadata about datasets that have been reviewed and passed the GEA criteria.


# Housekeeping
```{r}
# Load required libraries
library(glue) #for string manipulation
library(fs) #for file system operations
library(readxl)  #for reading excel files)
library(googlesheets4) #for reading google sheets
library(tidyverse)  #for data wrangling etc
rm(list=ls())
```

# Load main database/catalogue and subset source data
Notes:
* This is for datasets that have moved to GEA_pass
* Want to switch the function to purrr-based method
```{r}
source_data <- read_sheet("https://docs.google.com/spreadsheets/d/1P-xus66mTxY-9-a8jZgzwh3KVlL2Yvh6HzJ8rbmT1bY/edit?gid=396521023#gid=396521023", 
                        sheet = "Data_Review_MASTER", trim_ws = TRUE, col_types = "c") |> 
  filter(GEA_pass == TRUE)
```

# Load efg information
### Pixel values
```{r}
efg_pixelvalues <- read_csv(
  here::here("../metadata/gea-style/pixel-values/efg_pixelvalues.csv"),
  show_col_types = FALSE) |>
  rename(efg_code = EFG_Code,
         efg_name = EFG_Name,
         efg_description = EFG,
         pixel_value = PixelValue)
```


### EFG codes
```{r}
efg_codes <- efg_pixelvalues |> 
  pull(2) |> 
  unique() |> 
  replace_na("NA") |> 
  as.character()
```


# Directories
```{r}
output_dir <- here::here("resources/01-membership-matrix-templates" )
if (!dir.exists(output_dir)) {
  dir.create(output_dir, recursive = TRUE)
}
```


# Process membership matrix templates
```{r}
# Function to process one membership matrix file
process_membmat <- function(file_path) {
  
  # Derive data_id_code from folder name
  data_id <- basename(dirname(file_path))
  
  # Read membership matrix
  dat <- read_csv(file_path, show_col_types = FALSE)
  
  # Pivot longer across all EFG codes
  dat_long <- dat |>
    pivot_longer(
      cols = all_of(efg_codes),
      names_to = "efg_code",
      values_to = "value"
    ) |>
    filter(value == 1) |>
    select(-value)
  
  # Join with metadata
  dat_long <- dat_long |>
    left_join(efg_pixelvalues, by = "efg_code") |>
    select(
      crossref_date,
      crossref_by,
      GET_vsn,
      Source_ID,
      data_id_code,
      band_layer_name,
      in_class_field_name,
      in_class_value,
      in_class_description,
      in_class_description_detail,
      efg_code,
      efg_name,
      efg_description,
      pixel_value
    ) |>
    arrange(data_id_code, band_layer_name, efg_code)
  
  # Define output subdir and ensure it exists
  sub_dir <- path(output_folder, data_id)
  dir_create(sub_dir)
  
  # Save
  save_path <- path(sub_dir, glue::glue("{data_id}_GEA_crosswalk_table.csv"))
  write_csv(dat_long, save_path)
  
  message("Processed: ", data_id)
}

```



